import java.util.*;

class User {
    private String username;
    private String password;
    private String email;

    public User(String username, String password, String email) {
        this.username = username;
        this.password = password;
        this.email = email;
    }

    public String getUsername() {
        return username;
    }

    public boolean validatePassword(String password) {
        return this.password.equals(password);
    }

    @Override
    public String toString() {
        return "Username: " + username + ", Email: " + email;
    }
}

class Post {
    private static int postCount = 1;
    private int postId;
    private String content;
    private User author;
    private List<Comment> comments;
    private Set<User> likes;

    public Post(String content, User author) {
        this.postId = postCount++;
        this.content = content;
        this.author = author;
        this.comments = new ArrayList<>();
        this.likes = new HashSet<>();
    }

    public int getPostId() {
        return postId;
    }

    public String getContent() {
        return content;
    }

    public User getAuthor() {
        return author;
    }

    public List<Comment> getComments() {
        return comments;
    }

    public Set<User> getLikes() {
        return likes;
    }

    public void addComment(Comment comment) {
        comments.add(comment);
    }

    public void addLike(User user) {
        likes.add(user);
    }

    @Override
    public String toString() {
        return "Post ID: " + postId + " | Author: " + author.getUsername() + "\nContent: " + content;
    }
}

class Comment {
    private String content;
    private User author;

    public Comment(String content, User author) {
        this.content = content;
        this.author = author;
    }

    public String getContent() {
        return content;
    }

    public User getAuthor() {
        return author;
    }

    @Override
    public String toString() {
        return author.getUsername() + ": " + content;
    }
}

class SocialMediaApp {
    private static Map<String, User> users = new HashMap<>();
    private static Map<Integer, Post> posts = new HashMap<>();
    private static User loggedInUser = null;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            showMainMenu();
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    registerUser(scanner);
                    break;
                case 2:
                    loginUser(scanner);
                    break;
                case 3:
                    if (loggedInUser != null) {
                        createPost(scanner);
                    } else {
                        System.out.println("You need to log in first.");
                    }
                    break;
                case 4:
                    if (loggedInUser != null) {
                        viewPosts();
                    } else {
                        System.out.println("You need to log in first.");
                    }
                    break;
                case 5:
                    if (loggedInUser != null) {
                        likePost(scanner);
                    } else {
                        System.out.println("You need to log in first.");
                    }
                    break;
                case 6:
                    if (loggedInUser != null) {
                        commentOnPost(scanner);
                    } else {
                        System.out.println("You need to log in first.");
                    }
                    break;
                case 7:
                    if (loggedInUser != null) {
                        logoutUser();
                    } else {
                        System.out.println("You are not logged in.");
                    }
                    break;
                case 8:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice! Please try again.");
            }
        }
    }

    private static void showMainMenu() {
        System.out.println("\n--- Social Media App ---");
        System.out.println("1. Register");
        System.out.println("2. Login");
        System.out.println("3. Create Post");
        System.out.println("4. View Posts");
        System.out.println("5. Like Post");
        System.out.println("6. Comment on Post");
        System.out.println("7. Logout");
        System.out.println("8. Exit");
        System.out.print("Enter your choice: ");
    }

    private static void registerUser(Scanner scanner) {
        System.out.println("\n--- Register ---");
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        System.out.print("Enter email: ");
        String email = scanner.nextLine();

        if (users.containsKey(username)) {
            System.out.println("Username already exists.");
        } else {
            User user = new User(username, password, email);
            users.put(username, user);
            System.out.println("User registered successfully.");
        }
    }

    private static void loginUser(Scanner scanner) {
        System.out.println("\n--- Login ---");
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        User user = users.get(username);
        if (user != null && user.validatePassword(password)) {
            loggedInUser = user;
            System.out.println("Login successful. Welcome, " + user.getUsername() + "!");
        } else {
            System.out.println("Invalid credentials.");
        }
    }

    private static void createPost(Scanner scanner) {
        System.out.println("\n--- Create Post ---");
        System.out.print("Enter content for your post: ");
        String content = scanner.nextLine();

        Post post = new Post(content, loggedInUser);
        posts.put(post.getPostId(), post);
        System.out.println("Post created successfully!");
    }

    private static void viewPosts() {
        System.out.println("\n--- All Posts ---");
        for (Post post : posts.values()) {
            System.out.println(post);
            System.out.println("Likes: " + post.getLikes().size());
            for (Comment comment : post.getComments()) {
                System.out.println(comment);
            }
            System.out.println();
        }
    }

    private static void likePost(Scanner scanner) {
        System.out.println("\n--- Like a Post ---");
        System.out.print("Enter post ID to like: ");
        int postId = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        Post post = posts.get(postId);
        if (post != null) {
            post.addLike(loggedInUser);
            System.out.println("You liked the post.");
        } else {
            System.out.println("Post not found.");
        }
    }

    private static void commentOnPost(Scanner scanner) {
        System.out.println("\n--- Comment on a Post ---");
        System.out.print("Enter post ID to comment on: ");
        int postId = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        Post post = posts.get(postId);
        if (post != null) {
            System.out.print("Enter your comment: ");
            String commentContent = scanner.nextLine();
            Comment comment = new Comment(commentContent, loggedInUser);
            post.addComment(comment);
            System.out.println("Comment added successfully.");
        } else {
            System.out.println("Post not found.");
        }
    }

    private static void logoutUser() {
        System.out.println("\nLogging out...");
        loggedInUser = null;
    }
}
